name: DEPLOY-TO-CANARY
run-name: Continuous Deployment for Canary Environment

on:
  # Runs on pushes targeting the default branch
  repository_dispatch:
    types: [deploy]

jobs: 

  # Continuous delivery workflow in 'ss-pipeline' repo
  continuous-delivery:
    name: CD
    uses: dr3dr3/ss-pipeline/.github/workflows/continuous-delivery.yml@main
    with: 
      from-soln: ${{ github.event.client_payload.from_soln }}
      target-ref: ${{ github.event.client_payload.target_ref }}
      target-deploy: 'can'
    permissions:
      contents: read
      pages: write
      id-token: write
    secrets: inherit

  ### Add testing specific for CAN (pvt, etc)

  # Given successful testing then update the build for this environment in GitOps Config
  build-config:
    name: Update Build Config
    needs: [continuous-delivery]
    uses: dr3dr3/ss-pipeline/.github/workflows/gitops-update.yml@main
    with:
      config-item: '.deploy.revealmd.build.can'
      config-value: ${{ github.event.client_payload.target_ref }}
    secrets: inherit
  
  # Mark the release successfully deployed to Canary as the Latest release (for use in Prod deployment)
  mark-latest:
    name: Mark this release as latest
    needs: [continuous-delivery]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Edit Release
        env:
          GH_TOKEN: ${{ github.token }}         
        run: |
          gh release edit ${{ github.event.client_payload.target_ref }} --latest

  # Dispatch to Deploy to Production Environment
  dispatch-prd:
    name: Dispatch Production
    needs: [continuous-delivery]
    uses: dr3dr3/ss-pipeline/.github/workflows/continuous-deployment.yml@main
    with:
      from-soln: ${{ github.event.client_payload.from_soln }}
      target-ref: ${{ github.event.client_payload.target_ref }}
      target-deploy: 'prd'
    secrets: inherit